@import "~bootstrap/scss/bootstrap";

body {
  margin: 0;
  font-family: 'Montserrat', BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  font-family: 'Montserrat', sans-serif;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

$hover: #ee4a7b;
$black: #000000;
$white: #ffffff;
$grey-light: #9B9BA3;
$background: #F3F3F3;


h1 {
  font-size: 48px !important;
}

h2 {
  font-size: 40px !important;
  font-weight: 500 !important;
}

h3 {
  font-size: 36px !important;
}

h4 {
  font-size: 32px !important;
}

h5 {
  font-size: 26px !important;
}

h6 {
  font-size: 20px !important;
}

p {
  font-size: 14px !important;
}


$breakpoints: (
  'small':  ( min-width:  767px ),
  'medium': ( min-width:  992px ),
  'large':  ( min-width: 1200px )
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}